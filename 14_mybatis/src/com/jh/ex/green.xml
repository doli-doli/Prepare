<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.jh.ex.green"> <!-- 경로 표기법이 클래스명 표기법처럼 사용된다! -->
<!-- 
	mapper에서는 ?(물음표)를 사용할 수 없다. 
	대신 전달한 파라미터의 이름은 #{}을 통해 적는다!
	sql문 뒤에 ;(세미콜론)이 없다.
	
-->
	<!-- 
		select 태그 속성
		1. id : id를 통해서 sql문을 선택	(id는 임의로 결정가능!)
		2. parameterType : 매개변수의 타입
		3. resultType : 리턴의 타입  (풀패키지로 적어야한다!)	
	 -->	 
	 
	 <!-- 1. 전체 검색  -->
	<select id="select_all" resultType="com.jh.ex.GreenDto">
		select * from green order by idx
	</select>
	
	<!-- 2. 아이디 검색  -->
	<select id="select_by_id" resultType="com.jh.ex.GreenDto" parameterType="String"> 
		select * from green where id = #{id} 
	</select>

	<!-- 
		insert / update / delete 태그 속성
		1. id : id를 통해서 sql문을 선택	(id는 임의로 결정가능!)
		2. parameterType : 매개변수의 타입
		(resultType : 리턴의 타입이 없는 이유 :어차피  int로 결정되어 있으므로 쓰지 않는다.)
	-->	
	
	<!-- 3. 회원 추가 -->
	<insert id="insert" parameterType="com.jh.ex.GreenDto" >
		insert into green values (green_seq.nextval, #{id}, #{pw}, #{name}, #{age}, #{addr}, sysdate)
	</insert>
	
	<!-- 4. 회원 삭제 -->
	<delete id="remove" parameterType="com.jh.ex.GreenDto">
		delete from green where id =#{id} and pw = #{pw}
	</delete>
	
	<!-- 5. 회원 정보 수정 페이지  -->
	<select id="update_page" resultType="com.jh.ex.GreenDto">
		select * from green where id = #{id} and pw =#{pw}
	</select>
	
	<!-- 6.회원 정보 수정  -->
	<update id="update" parameterType="com.jh.ex.GreenDto">
		update green set pw= #{pw}, name= #{name}, age= #{age}, addr= #{addr} where id = #{id}
	</update>
	
</mapper>